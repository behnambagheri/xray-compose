server {
    server_name proxy.example.com;

    index index.html index.htm;
    root /var/www/html;



    client_header_timeout 3h;
    client_body_timeout 3h;
    keepalive_timeout 3h;
    client_max_body_size 0;
    client_body_buffer_size 512k;
    grpc_read_timeout 3h;

    location / {
           proxy_pass http://127.0.0.1:3000;
# 	    return 404;
        }


    # trojan-ws
    location /tr-ws-IqYJAouF {
        if ($http_upgrade != "websocket") {
#                 return 404;
               proxy_pass http://127.0.0.1:3000;

        }
        proxy_pass http://127.0.0.1:5310;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 3h;
    }

    # vmess-ws
    location /apiVM {
        if ($http_upgrade != "websocket") {
#                return 404;
               proxy_pass http://127.0.0.1:3000;

        }
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 3h;
        proxy_set_header X-NginX-Proxy true;
        rewrite /apiVM /$1 break;
        proxy_pass http://127.0.0.1:6310;
    }

    location /ss-vr-WPqIgYBp {

        if ($http_upgrade != "websocket") {
#                 return 404;
                proxy_pass http://127.0.0.1:3000;

        }
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_pass http://127.0.0.1:444;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        }



    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/proxy.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/proxy.example.com/privkey.pem;

}
server {
    if ($host = proxy.example.com) {
        return 301 https://$host$request_uri;
    }

    server_name proxy.example.co;
    listen 80;
    return 404; # managed by Certbot
}
